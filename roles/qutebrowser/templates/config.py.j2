#
#
config.load_autoconfig(True)
#
c.auto_save.session = True
c.colors.webpage.darkmode.enabled = True
c.content.autoplay = False
c.content.blocking.method = 'both'
c.content.blocking.hosts.lists = ['https://big.oisd.nl/', 'https://nsfw.oisd.nl/']
c.content.blocking.hosts.block_subdomains = True
c.content.cookies.accept = 'no-3rdparty'
c.content.default_encoding = 'utf-8'
c.content.geolocation = 'ask'
c.content.notifications.enabled = False
c.content.webgl = False
c.content.webrtc_ip_handling_policy = 'default-public-interface-only'
c.content.pdfjs = False
c.qt.force_platformtheme = 'qt6ct'
c.content.headers.accept_language = 'en-US,en;q=0.5'
c.content.tls.certificate_errors = 'ask-block-thirdparty'
#c.content.headers.custom = {"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"}
c.content.headers.user_agent = 'Mozilla/5.0 (Windows NT 10.0; rv:109.0) Gecko/20100101 Firefox/113.0'
config.bind('<Shift-m>', 'spawn mpv --ytdl-format=best {url}')
#
# 
# completion 
## Background color of the completion widget category headers.
c.colors.completion.category.bg = '#{{ background_color }}'
## Bottom border color of the completion widget category headers.
c.colors.completion.category.border.bottom = '#{{ black_color }}'
## Top border color of the completion widget category headers.
c.colors.completion.category.border.top = '#{{ alt_black_color }}' 
## Foreground color of completion widget category headers.
c.colors.completion.category.fg = '#{{ green_color }}'
c.colors.completion.fg = '#{{ alt_white_color }}'
# odd and even
c.colors.completion.odd.bg = '#{{ background_color }}'
c.colors.completion.even.bg = '#{{ black_color }}'

## Background color of the selected completion item.
c.colors.completion.item.selected.bg = '#{{ alt_black_color }}'
## Bottom border color of the selected completion item.
c.colors.completion.item.selected.border.bottom = '#{{ alt_black_color }}'
## Top border color of the completion widget category headers.
c.colors.completion.item.selected.border.top = '#{{ alt_black_color }}'
## Foreground color of the selected completion item.
c.colors.completion.item.selected.fg = '#{{ foreground_color }}'
## Foreground color of the selected completion item.
c.colors.completion.item.selected.match.fg = '#{{ magenta_color }}'
## Foreground color of the matched text in the completion.
c.colors.completion.match.fg = '#{{ foreground_color }}'

## Color of the scrollbar in completion view
c.colors.completion.scrollbar.bg = '#{{ alt_white_color }}'
## Color of the scrollbar handle in completion view.
c.colors.completion.scrollbar.fg = '#{{ alt_black_color }}'
#

# downloads
c.colors.downloads.bar.bg = '#{{ background_color }}'
c.colors.downloads.error.bg = '#{{ background_color }}'
c.colors.downloads.start.bg = '#{{ background_color }}'
c.colors.downloads.stop.bg = '#{{ background_color }}'

c.colors.downloads.error.fg = '#{{ red_color }}'
c.colors.downloads.start.fg = '#{{ blue_color }}'
c.colors.downloads.stop.fg = '#{{ green_color }}'
c.colors.downloads.system.fg = "none"
c.colors.downloads.system.bg = "none"
#

# hints
## Background color for hints. Note that you can use a `rgba(...)` value
## for transparency.
c.colors.hints.bg = '#{{ alt_yellow_color }}'

## Font color for hints.
c.colors.hints.fg = '#{{ background_color }}'

## Hints
c.hints.border = "1px solid " + '#{{ background_color }}'

## Font color for the matched part of hints.
c.colors.hints.match.fg = '#{{ white_color }}'

# keyhints
## Background color of the keyhint widget.
c.colors.keyhint.bg = '#{{ black_color }}'

## Text color for the keyhint widget.
c.colors.keyhint.fg = '#{{ foreground_color }}'

## Highlight color for keys to complete the current keychain.
c.colors.keyhint.suffix.fg = '#{{ white_color }}'
#

# messages
## Background color of an error message.
c.colors.messages.error.bg = '#{{ black_color }}'
## Background color of an info message.
c.colors.messages.info.bg = '#{{ black_color }}'
## Background color of a warning message.
c.colors.messages.warning.bg = '#{{ black_color }}'

## Border color of an error message.
c.colors.messages.error.border = '#{{ red_color }}'
## Border color of an info message.
c.colors.messages.info.border = '#{{ black_color }}'
## Border color of a warning message.
c.colors.messages.warning.border = '#{{ yellow_color }}'

## Foreground color of an error message.
c.colors.messages.error.fg = '#{{ red_color }}'
## Foreground color an info message.
c.colors.messages.info.fg = '#{{ foreground_color }}'
## Foreground color a warning message.
c.colors.messages.warning.fg = '#{{ yellow_color }}'
# 

# prompts 
## Background color for prompts.
c.colors.prompts.bg = '#{{ black_color }}'

# ## Border used around UI elements in prompts.
c.colors.prompts.border = "1px solid " + '#{{ white_color }}'

## Foreground color for prompts.
c.colors.prompts.fg = '#{{ foreground_color }}'

## Background color for the selected item in filename prompts.
c.colors.prompts.selected.bg = '#{{ alt_black_color }}'

## Background color for the selected item in filename prompts.
c.colors.prompts.selected.fg = '#{{ magenta_color }}'
# 

# statusbar 
## Background color of the statusbar.
c.colors.statusbar.normal.bg = '#{{ background_color }}'
## Background color of the statusbar in insert mode.
c.colors.statusbar.insert.bg = '#{{ black_color }}'
## Background color of the statusbar in command mode.
c.colors.statusbar.command.bg = '#{{ background_color }}'
## Background color of the statusbar in caret mode.
c.colors.statusbar.caret.bg = '#{{ background_color }}'
## Background color of the statusbar in caret mode with a selection.
c.colors.statusbar.caret.selection.bg = '#{{ background_color }}'

## Background color of the progress bar.
c.colors.statusbar.progress.bg = '#{{ background_color }}'
## Background color of the statusbar in passthrough mode.
c.colors.statusbar.passthrough.bg = '#{{ background_color }}'

## Foreground color of the statusbar.
c.colors.statusbar.normal.fg = '#{{ foreground_color }}'
## Foreground color of the statusbar in insert mode.
c.colors.statusbar.insert.fg = '#{{ magenta_color }}'
## Foreground color of the statusbar in command mode.
c.colors.statusbar.command.fg = '#{{ foreground_color }}'
## Foreground color of the statusbar in passthrough mode.
c.colors.statusbar.passthrough.fg = '#{{ alt_yellow_color }}'
## Foreground color of the statusbar in caret mode.
c.colors.statusbar.caret.fg = '#{{ alt_yellow_color }}'
## Foreground color of the statusbar in caret mode with a selection.
c.colors.statusbar.caret.selection.fg = '#{{ alt_yellow_color }}'

## Foreground color of the URL in the statusbar on error.
c.colors.statusbar.url.error.fg = '#{{ red_color }}'

## Default foreground color of the URL in the statusbar.
c.colors.statusbar.url.fg = '#{{ foreground_color }}'

## Foreground color of the URL in the statusbar for hovered links.
c.colors.statusbar.url.hover.fg = '#{{ alt_cyan_color }}'

## Foreground color of the URL in the statusbar on successful load
c.colors.statusbar.url.success.http.fg = '#{{ cyan_color }}'

## Foreground color of the URL in the statusbar on successful load
c.colors.statusbar.url.success.https.fg = '#{{ green_color }}'

## Foreground color of the URL in the statusbar when there's a warning.
c.colors.statusbar.url.warn.fg = '#{{ yellow_color }}'

## PRIVATE MODE COLORS
## Background color of the statusbar in private browsing mode.
c.colors.statusbar.private.bg = '#{{ foreground_color }}'
## Foreground color of the statusbar in private browsing mode.
c.colors.statusbar.private.fg = '#{{ background_color }}'
## Background color of the statusbar in private browsing + command mode.
c.colors.statusbar.command.private.bg = '#{{ foreground_color }}'
## Foreground color of the statusbar in private browsing + command mode. 
c.colors.statusbar.command.private.fg = '#{{ background_color }}'

# 

# tabs 
## Background color of the tab bar.
c.colors.tabs.bar.bg = '#{{ background_color }}'
## Background color of unselected even tabs.
c.colors.tabs.even.bg = '#{{ alt_black_color }}'
## Background color of unselected odd tabs.
c.colors.tabs.odd.bg = '#{{ black_color }}'

## Foreground color of unselected even tabs.
c.colors.tabs.even.fg = '#{{ alt_white_color }}'
## Foreground color of unselected odd tabs.
c.colors.tabs.odd.fg = '#{{ white_color }}'

## Color for the tab indicator on errors.
c.colors.tabs.indicator.error = '#{{ red_color }}'
## Color gradient interpolation system for the tab indicator.
## Valid values:
##	 - rgb: Interpolate in the RGB color system.
##	 - hsv: Interpolate in the HSV color system.
##	 - hsl: Interpolate in the HSL color system.
##	 - none: Don't show a gradient.
c.colors.tabs.indicator.system = "none"

 # ## Background color of selected even tabs.
c.colors.tabs.selected.even.bg = '#{{ background_color }}'
# ## Background color of selected odd tabs.
c.colors.tabs.selected.odd.bg = '#{{ background_color }}'

# ## Foreground color of selected even tabs.
c.colors.tabs.selected.even.fg = '#{{ foreground_color }}'
# ## Foreground color of selected odd tabs.
c.colors.tabs.selected.odd.fg = '#{{ foreground_color }}'
# 

# context menus 
c.colors.contextmenu.menu.bg = '#{{ background_color }}'
c.colors.contextmenu.menu.fg = '#{{ foreground_color }}'

c.colors.contextmenu.disabled.bg = '#{{ black_color }}'
c.colors.contextmenu.disabled.fg = '#{{ white_color }}'

c.colors.contextmenu.selected.bg = '#{{ background_color }}'
c.colors.contextmenu.selected.fg = '#{{ magenta_color }}'
# 

# background color for webpages 
c.colors.webpage.bg = '#{{ background_color }}'
